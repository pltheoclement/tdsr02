//Exercice 2 TD2
#include <unistd.h>
#include <stdlib.h>
#include <stdio.h>
#include <sys/types.h>
#include <signal.h>
struct sigaction act_pere, act_fils;
pid_t pid_fils, pid_pere;
int cpt_pere=1, cpt_fils=1; /* nombre de caractères afficher*/
char car_pere='A', car_fils='a'; /* caractère à afficher*/

void handler_pere(int x){
    int i;
    for(i=0;i<cpt_pere;i++){
        if(car_pere<='Z'){
            printf("%c",car_pere);
            fflush(stdout);
            car_pere++;
        }else{
            printf("\n");
            exit(0);
        }
    }
    cpt_pere++;
    kill(pid_fils,SIGUSR1);
}
void handler_fils(int x){
    int i;
    for(i=0;i<cpt_fils;i++){
        if(car_fils<='z'){
            printf("%c",car_fils);
            fflush(stdout);
            car_fils++;
        }else{
            kill(pid_pere,SIGUSR1);
            exit(0);
        }
    }
    cpt_fils++;
    kill(pid_pere,SIGUSR1);
}
int main(){
    pid_fils=fork();
    if(pid_fils==0){
        /*processus fils: minuscules*/
        pid_pere=getppid();
        act_fils.sa_handler=handler_fils;
        sigaction(SIGUSR1,&act_fils,NULL);
        while(1){
            pause();
        }
    }else{      /*processus pere: majuscules*/
        act_pere.sa_handler=handler_pere;
        sigaction(SIGUSR1,&act_pere,NULL);
        sleep(1);
        kill(pid_fils,SIGUSR1);
        while(1){
            pause();
        }
    }
}